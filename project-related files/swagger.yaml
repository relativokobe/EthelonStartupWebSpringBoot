swagger: "2.0"
info:
  description: "This project is to migrate Ethelon server (which is currently using Laravel 5.6) to Spring boot. Some APIs are not using the standard procedures or good practices but it will be fixed soon. "
  version: "2.0.0"
  title: "Ethelon"
  contact:
    email: "kobearelativo@gmail.com"
tags:
  - name: "User Access"
    description: "User access to APIs"
  - name: "Acitivities Interaction"
    description: "APIs related to Activities"
  - name: "Volunteer-related information"
    description: "APIs related to volunteer's information"
schemes:
  - "https"
  - "http"
paths:
  /register:
    post:
      tags:
        - "User Access"
      summary: "Register a new user to the DB "
      description: ""
      operationId: "registerUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "email"
          in: "path"
          description: "Email of the user to be reigistered"
          required: true
          type: "string"
        - name: "password"
          in: "path"
          description: "Password of the user to be reigistered"
          required: true
          type: "string"
        - name: "name"
          in: "path"
          description: "Name of the user to be reigistered"
          required: true
          type: "string"
        - name: "role"
          in: "path"
          description: "Role of the user to be reigistered"
          required: true
          type: "string"
        - name: "location"
          in: "path"
          description: "location of the user to be reigistered"
          required: true
          type: "string"
        - name: "image_url"
          in: "path"
          description: "Display image url of the user to be reigistered"
          required: true
          type: "string"
        - name: "fcm_token"
          in: "path"
          description: "fcm_token of the user to be reigistered"
          required: true
          type: "string"
        - name: "age"
          in: "path"
          type: "string"
          description: "Age of the user to be reigistered"
          required: true
      responses:
        200:
          description: "Status is always 200 (Needs to be fixed)"
          schema:
            $ref: "#/definitions/RegisterResponse"
  /login:
    post:
      tags:
        - "User Access"
      summary: "User login to access APIs"
      description: ""
      operationId: "loginUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "email"
          in: "path"
          description: "Email of the user to login"
          required: true
          type: "string"
        - name: "password"
          in: "path"
          description: "Password of the user to login"
          required: true
          type: "string"
      responses:
        200:
          description: "Status is always 200 (Needs to be fixed)"
          schema:
            $ref: "#/definitions/LoginResponse"
  /getallactivities:
    post:
      tags:
        - "Acitivities Interaction"
      summary: "Get activities for Volunteer in home screen"
      description: ""
      operationId: "getallactivities"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "volunteer_id"
          in: "path"
          description: "ID of the volunteer"
          required: true
          type: "string"
        - name: "offset"
          in: "path"
          description: "Offset of the activities to be retrieved"
          required: true
          type: "integer"
      responses:
        200:
          description: "Status is always 200 (Needs to be fixed)"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Activity'
  /volunteerskills:
    post:
      tags:
        - "Volunteer-related information"
      summary: "API for volunteer to input his skills"
      description: ""
      operationId: "volunteerskills"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "volunteer_id"
          in: "path"
          description: "ID of the volunteer"
          required: true
          type: "string"
        - name: "count"
          in: "path"
          description: "count of how many skills"
          required: true
          type: "integer"
        - name: "params{num}"
          in: "path"
          description: "can have multiple parameters depending on {num}"
          required: true
          type: "string"
      responses:
        200:
          description: "Status is always 200 (Needs to be fixed)"
          schema:
            $ref: "#/definitions/Success"
        201:
          description: "Status is always 200 (Needs to be fixed)"
          schema:
            $ref: "#/definitions/Wtf"
  /joinactivity:
    post:
      tags:
        - "Volunteer-related information"
      summary: "API for volunteer join an activity"
      description: ""
      operationId: "joinactivity"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "volunteer_id"
          in: "path"
          description: "ID of the volunteer"
          required: true
          type: "string"
        - name: "activity_id"
          in: "path"
          description: "ID of the activity to join"
          required: true
          type: "string"
      responses:
        200:
          description: "Status is always 200 (Needs to be fixed). message value can be success or Already Joined"
          schema:
            $ref: "#/definitions/Message"
  /activitycriteria:
    post:
      tags:
        - "Acitivities Interaction"
      summary: "API to retrieve all criteria of an activity"
      description: ""
      operationId: "activitycriteria"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "activity_id"
          in: "path"
          description: "ID of the activity"
          required: true
          type: "string"
      responses:
        200:
          description: "Status is always 200 (Needs to be fixed). Retrieve all criteria of an activity"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/ActivityCriteria'
  /activitygetvolunteersbefore:
    post:
      tags:
        - "Acitivities Interaction"
      summary: "API to retrieve all volunteers before the start of activity"
      description: ""
      operationId: "activitygetvolunteersbefore"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "activity_id"
          in: "path"
          description: "ID of the activity"
          required: true
          type: "string"
      responses:
        200:
          description: "Status is always 200 (Needs to be fixed). Retrieve all volunteers of an activity before it starts"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/VolunteerName'
  /activitygetvolunteersafter:
    post:
      tags:
        - "Acitivities Interaction"
      summary: "API to retrieve all volunteers after the start of activity"
      description: ""
      operationId: "activitygetvolunteersafter"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "activity_id"
          in: "path"
          description: "ID of the activity"
          required: true
          type: "string"
      responses:
        200:
          description: "Status is always 200 (Needs to be fixed). Retrieve all volunteers of an activity after it starts"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/VolunteerName'
  /groupmatestorate:
    post:
      tags:
        - "Volunteer-related information"
      summary: "API to retrieve all volunteers to be rated by current volunteer"
      description: ""
      operationId: "groupmatestorate"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "activity_id"
          in: "path"
          description: "ID of the activity"
          required: true
          type: "string"
        - name: "volunteer_id"
          in: "path"
          description: "ID of the activity"
          required: true
          type: "string"
      responses:
        200:
          description: "Status is always 200 (Needs to be fixed). Retrieve all volunteers of an activity after it starts"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/VolunteerToRate'
definitions:
  Activity:
    type: "object"
    properties:
      activity_id:
        type: "string"
      foundation_id:
        type: "string"
      name:
        type: "string"
      image_url:
        type: "string"
      imageQr_url:
        type: "string"
      description:
        type: "string"
      location:
        type: "string"
      start_time:
        type: "string"
      end_time:
        type: "string"
      group:
        type: "integer"
      long:
        type: "string"
      lat:
        type: "string"
      points_equivalent:
        type: "integer"
      status:
        type: "integer"
      created_at:
        type: "string"
      update_at:
        type: "string"
      contactperson:
        type: "string"
      contact:
        type: "integer"
      startDate:
        type: "string"
      foundtion_name:
        type: "integer"
      volunteerstatus:
        type: "integer"
      foundation_img:
        type: "string"
      volunteer_count:
        type: "integer"
      activity_skills:
        type: "array"
        items:
          $ref: "#/definitions/Skill"
      activity_criteria:
        type: "array"
        items:
          $ref: '#/definitions/ActivityCriteria'
  RegisterResponse:
    type: "object"
    properties:
      api_token:
        type: "string"
      volunteer_id:
        type: "string"
      name:
        type: "string"
      message:
        type: "string"
  LoginResponse:
    type: "object"
    properties:
      api_token:
        type: "string"
      volunteer_id:
        type: "string"
      name:
        type: "string"
      message:
        type: "string"
      image_url:
        type: "string"
  Skill:
    type: "object"
    properties:
      name:
        type: "string"
      activity_id:
        type: "string"
      created_at:
        type: "string"
      updated_at:
        type: "string"
  ActivityCriteria:
    type: "object"
    properties:
      activity_id:
        type: "string"
      criteria:
        type: "string"
  Success:
    type: "object"
    properties:
      success:
        type: "string"
  Wtf:
    type: "object"
    properties:
      wtf:
        type: "string"
  Message:
    type: "object"
    properties:
      message:
        type: "string"
  VolunteerName:
    type: "object"
    properties:
      volunteer_id:
        type: "string"
      location:
        type: "string"
      image_url:
        type: "string"
      fcm_token:
        type: "string"
      age:
        type: "integer"
      points:
        type: "integer"
      name:
        type: "string"
  VolunteerToRate:
    type: "object"
    properties:
      volunteer_id:
        type: "string"
      name:
        type: "string"
      image_url:
        type: "string"
      activity_group_id:
        type: "string"
      num_of_vol:
        type: "integer"
      type:
        type: "integer"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"